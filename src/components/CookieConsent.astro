---
// Google Tag Manager ID
const GTM_ID = 'GTM-CJZD10VZT1';
---

<!-- Google Tag Manager - No Script -->
<noscript>
    <iframe 
        src={`https://www.googletagmanager.com/ns.html?id=${GTM_ID}`}
        height="0" 
        width="0" 
        style="display:none;visibility:hidden">
    </iframe>
</noscript>

<div id="cookie-consent" class="cookie-banner">
    <div class="cookie-content">
        <p>
            We use cookies and similar technologies to improve your experience. Choose "Accept All" to allow cookies and enable analytics for a better experience, or "Customize" to manage your preferences.
            <a href="/privacy-policy">Learn more</a>
        </p>
        <div class="cookie-buttons">
            <button id="customize-cookies" class="btn-customize">Customize</button>
            <button id="accept-cookies" class="btn-accept">Accept All</button>
        </div>
    </div>
    <div id="cookie-preferences" class="cookie-preferences">
        <div class="preference-group">
            <label class="preference-label">
                <input type="checkbox" id="essential-cookies" checked disabled>
                <span>Essential Cookies</span>
                <small>Required for basic website functionality. Cannot be disabled.</small>
            </label>
            <label class="preference-label">
                <input type="checkbox" id="analytics-cookies">
                <span>Analytics Cookies</span>
                <small>Help us understand how visitors interact with our website.</small>
            </label>
            <label class="preference-label">
                <input type="checkbox" id="marketing-cookies">
                <span>Marketing Cookies</span>
                <small>Used for personalized advertisements and recommendations.</small>
            </label>
        </div>
        <button id="save-preferences" class="btn-save">Save Preferences</button>
    </div>
</div>

<script define:vars={{ GTM_ID }}>
    // Default preferences
    const defaultPreferences = {
        essential: true, // Always true
        analytics: false,
        marketing: false
    };

    // Get stored preferences
    function getStoredPreferences() {
        const saved = localStorage.getItem('cookiePreferences');
        return saved ? JSON.parse(saved) : defaultPreferences;
    }

    // Save preferences
    function savePreferences(preferences) {
        localStorage.setItem('cookiePreferences', JSON.stringify(preferences));
        updateGTMConsent(preferences);
    }

    // Initialize Google Tag Manager
    function initGTM() {
        const preferences = getStoredPreferences();
        
        // Create dataLayer array if it doesn't exist
        window.dataLayer = window.dataLayer || [];

        // Push GTM configuration with consent state
        window.dataLayer.push({
            'gtm.start': new Date().getTime(),
            event: 'gtm.js',
            consentPreferences: preferences
        });

        // Load GTM script
        const script = document.createElement('script');
        script.async = true;
        script.src = `https://www.googletagmanager.com/gtm.js?id=${GTM_ID}`;
        document.head.appendChild(script);
    }

    // Update GTM consent state
    function updateGTMConsent(preferences) {
        if (window.dataLayer) {
            window.dataLayer.push({
                event: 'updateConsent',
                consentPreferences: preferences
            });
        }
    }

    // Show the cookie banner
    function showCookieBanner() {
        const banner = document.getElementById('cookie-consent');
        if (banner) {
            banner.classList.add('show');
        }
    }

    // Hide the cookie banner
    function hideCookieBanner() {
        const banner = document.getElementById('cookie-consent');
        if (banner) {
            banner.classList.remove('show');
        }
    }

    // Toggle preferences section
    function togglePreferences() {
        const prefsSection = document.getElementById('cookie-preferences');
        if (prefsSection) {
            prefsSection.classList.toggle('show');
        }
    }

    // Initialize the cookie consent system
    function initCookieConsent() {
        const preferences = getStoredPreferences();
        
        // If no preferences are stored, show the banner
        if (!localStorage.getItem('cookiePreferences')) {
            showCookieBanner();
        } else {
            // Initialize GTM with stored preferences
            initGTM();
        }

        // Set checkbox states
        const analyticsCheckbox = document.getElementById('analytics-cookies');
        const marketingCheckbox = document.getElementById('marketing-cookies');
        if (analyticsCheckbox) analyticsCheckbox.checked = preferences.analytics;
        if (marketingCheckbox) marketingCheckbox.checked = preferences.marketing;

        // Event Listeners
        document.getElementById('accept-cookies')?.addEventListener('click', () => {
            const allAccepted = {
                essential: true,
                analytics: true,
                marketing: true
            };
            savePreferences(allAccepted);
            hideCookieBanner();
            initGTM();
        });

        document.getElementById('customize-cookies')?.addEventListener('click', togglePreferences);

        document.getElementById('save-preferences')?.addEventListener('click', () => {
            const analyticsInput = document.getElementById('analytics-cookies');
            const marketingInput = document.getElementById('marketing-cookies');
            const newPreferences = {
                essential: true,
                analytics: analyticsInput ? analyticsInput.checked : false,
                marketing: marketingInput ? marketingInput.checked : false
            };
            savePreferences(newPreferences);
            hideCookieBanner();
            initGTM();
        });
    }

    // Initialize when DOM is loaded
    document.addEventListener('DOMContentLoaded', initCookieConsent);
</script>

<style>
    .cookie-banner {
        position: fixed;
        bottom: 0;
        left: 0;
        right: 0;
        background: var(--card-bg);
        border-top: 1px solid var(--border);
        box-shadow: 0 -4px 6px rgba(0, 0, 0, 0.1);
        z-index: 1000;
        transform: translateY(100%);
        transition: transform 0.3s ease-in-out;
        max-height: 100vh;
        overflow-y: auto;
    }

    .cookie-banner.show {
        transform: translateY(0);
    }

    .cookie-content {
        max-width: 1200px;
        margin: 0 auto;
        padding: 1.5rem;
        display: flex;
        align-items: center;
        justify-content: space-between;
        gap: 2rem;
    }

    .cookie-content p {
        margin: 0;
        color: var(--text);
        font-size: 0.95rem;
    }

    .cookie-content a {
        color: var(--primary);
        text-decoration: underline;
    }

    .cookie-buttons {
        display: flex;
        gap: 1rem;
    }

    .btn-accept,
    .btn-customize {
        padding: 0.5rem 1rem;
        border-radius: var(--radius);
        font-weight: 600;
        cursor: pointer;
        transition: all 0.2s ease;
    }

    .cookie-preferences {
        display: none;
        padding: 1rem 1.5rem;
        border-top: 1px solid var(--border);
        background: var(--card-bg);
    }

    .cookie-preferences.show {
        display: block;
    }

    .preference-group {
        display: flex;
        flex-direction: column;
        gap: 1rem;
        margin-bottom: 1rem;
    }

    .preference-label {
        display: flex;
        flex-direction: column;
        gap: 0.25rem;
        cursor: pointer;
    }

    .preference-label input[type="checkbox"] {
        margin-right: 0.5rem;
    }

    .preference-label small {
        color: var(--text-muted);
        font-size: 0.85rem;
    }

    .btn-save {
        background: var(--primary);
        color: white;
        border: none;
        padding: 0.5rem 1rem;
        border-radius: var(--radius);
        font-weight: 600;
        cursor: pointer;
        transition: all 0.2s ease;
    }

    .btn-save:hover {
        background: var(--primary-dark);
    }

    .btn-customize {
        background: transparent;
        border: 1px solid var(--border);
        color: var(--text);
    }

    .btn-accept {
        background: var(--primary);
        border: none;
        color: white;
    }

    .btn-accept:hover {
        background: var(--primary-dark);
    }

    @media (max-width: 768px) {
        .cookie-content {
            flex-direction: column;
            align-items: stretch;
            gap: 1rem;
        }

        .cookie-buttons {
            flex-direction: column;
        }
    }
</style>

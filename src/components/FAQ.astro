---
interface FAQItem {
    question: string;
    answer: string;
}

interface Props {
    faqs: FAQItem[];
    title?: string;
}

const { 
    faqs,
    title = "Frequently Asked Questions"
} = Astro.props;

const faqSchema = {
    "@context": "https://schema.org",
    "@type": "FAQPage",
    "mainEntity": faqs.map(faq => ({
        "@type": "Question",
        "name": faq.question,
        "acceptedAnswer": {
            "@type": "Answer",
            "text": faq.answer
        }
    }))
};
---

<section class="faq-section">
    <div class="container">
        <h2>{title}</h2>
        <div class="faq-list">
            {faqs.map((faq, index) => (
                <details class="faq-item">
                    <summary class="faq-question">
                        {faq.question}
                        <svg 
                            class="icon" 
                            width="24" 
                            height="24" 
                            viewBox="0 0 24 24" 
                            fill="none" 
                            stroke="currentColor" 
                            stroke-width="2"
                        >
                            <polyline points="6 9 12 15 18 9"></polyline>
                        </svg>
                    </summary>
                    <div class="faq-answer">
                        {faq.answer}
                    </div>
                </details>
            ))}
        </div>
    </div>
</section>

<script type="application/ld+json" set:html={JSON.stringify(faqSchema)} />

<style>
    .faq-section {
        padding: 4rem 0;
        background: var(--bg);
    }

    .container {
        max-width: 800px;
        margin: 0 auto;
        padding: 0 1.5rem;
    }

    h2 {
        text-align: center;
        margin-bottom: 3rem;
        font-size: 2rem;
        background: linear-gradient(135deg, var(--primary), var(--accent));
        -webkit-background-clip: text;
        background-clip: text;
        -webkit-text-fill-color: transparent;
    }

    .faq-list {
        display: flex;
        flex-direction: column;
        gap: 1rem;
    }

    .faq-item {
        background: var(--card-bg);
        border: 1px solid var(--border);
        border-radius: var(--radius);
        overflow: hidden;
    }

    .faq-question {
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: 1.25rem;
        cursor: pointer;
        font-weight: 600;
        user-select: none;
    }

    .faq-question .icon {
        transition: transform 0.3s ease;
    }

    .faq-item[open] .icon {
        transform: rotate(180deg);
    }

    .faq-answer {
        padding: 0 1.25rem 1.25rem;
        color: var(--text-muted);
        line-height: 1.6;
    }

    @media (max-width: 768px) {
        .faq-section {
            padding: 3rem 0;
        }

        h2 {
            font-size: 1.75rem;
            margin-bottom: 2rem;
        }
    }
</style>
